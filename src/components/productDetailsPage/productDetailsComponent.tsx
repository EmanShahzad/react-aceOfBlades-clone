import React, { useState, useEffect } from "react";
import { Swiper, SwiperSlide } from "swiper/react";
import "swiper/css";
import { NavLink } from "react-router-dom";
import { useAppSelector, useAppDispatch } from "../../redux/hooks";
import { addToCart } from "../../redux/features/cart/CartSlice";

interface ProductState {
  id: string;
  name: string;
  price: number;
  isOnSale: boolean;
  newPrice?: number;
  stock: number;
  categoryId: string;
  specifications: string[];
  images: string[];
}

interface CategoryState {
  id: string;
  name: string;
  image: string;
}

interface RelatedProductsProps {
  products: ProductState[];
  categories: CategoryState[];
  item?: ProductState;
}

interface CartProps {
  productQuantity: number;
  productId: string;
}

function ProductDetailsComponent({
  products,
  categories,
  item,
}: RelatedProductsProps) {
  const [quantity, setQuantity] = useState<number>(1);
  const cart = useAppSelector((state) => {
    return state.cart;
  });

  const dispatch = useAppDispatch();
  const addItem = (itemId: string) => {
    dispatch(addToCart({ itemId, quantity }));
  };

  const findCategory = () => {
    const category = categories.find((cat) => item?.categoryId === cat.id);
    return category?.name;
  };

  const goNext = () => {
    let i = products.findIndex((p) => p === item);
    const nextItem = products[(i + 1) % products.length];
    return nextItem ? nextItem.id : null;
  };

  const goPrev = () => {
    let i = products.findIndex((p) => p === item);
    const nextItem = products[(i - 1) % products.length];
    return nextItem ? nextItem.id : null;
  };
  //   if (cart.find((c) => c.productId === itemId)) {
  //     setCart(
  //       cart.map((item) =>
  //         item.productId === itemId
  //           ? { ...item, productQuantity: item.productQuantity + quantity }
  //           : item
  //       )
  //     );
  //   } else {
  //     setCart((prevCart) => [
  //       ...prevCart,
  //       { productId: itemId, productQuantity: quantity },
  //     ]);
  //   }
  // };

  const defaultImage = item?.images[0] as string;
  let [selectedImage, setSelectedImage] = useState<string>(defaultImage);
  useEffect(() => {
    setSelectedImage(item?.images[0] as string);
    console.log("Cart updated:", cart);
    setQuantity(1);
  }, [item, cart]);

  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const value = e.target.value;
    const newQuantity = Number(value);
    setQuantity(newQuantity);
  };
  return (
    <div>
      <div className="container">
        <div className="position-relative">
          <div className="d-flex justify-content-center align-items-start gap-2 p-3 my-3">
            <div>
              <div>
                <img style={{ width: "350px" }} src={selectedImage} alt="" />
              </div>
              <div>
                <Swiper
                  spaceBetween={12}
                  slidesPerView={4}
                  onSlideChange={() => console.log("slide change")}
                  style={{ maxWidth: "380px" }}
                  className="d-flex m-0 p-2"
                >
                  {item?.images.map((i) => (
                    <SwiperSlide
                      className={
                        selectedImage === i ? "border border-dark border-2" : ""
                      }
                    >
                      <img
                        className="w-100"
                        src={i}
                        alt=""
                        onClick={() => {
                          setSelectedImage(i);
                        }}
                      />
                    </SwiperSlide>
                  ))}
                </Swiper>
              </div>
            </div>
            <div className="w-75 d-flex flex-column py-2 px-4">
              <div
                className="fs-3 fw-semibold"
                style={{
                  fontFamily: "Barlow Semi Condensed",
                  color: "#3a3a3a",
                }}
              >
                {item?.name}
              </div>
              <div
                className="fs-3 fw-semibold"
                style={{
                  fontFamily: "Barlow Semi Condensed",
                  color: "#4B4F58",
                }}
              >
                {item?.price}
              </div>
              <div style={{ color: "#4B4F58" }} className="fs-5">
                Beautiful handmade chef’s knife. The perfect addition to your
                kitchen
              </div>
              <div
                style={{ color: "#4B4F58", fontSize: "large" }}
                className="py-4"
              >
                Specifications:{" "}
                {item?.specifications.map((spec) => (
                  <>
                    <br /> <span>– {spec}</span>
                  </>
                ))}
              </div>
              <div style={{ color: "green" }} className="py-2">
                <strong style={{ color: "#4B4F58" }}>Availability:</strong>{" "}
                {item?.stock === 0 ? (
                  <span style={{ color: "red" }}>Out of Stock</span>
                ) : (
                  <span>{item?.stock} in stock</span>
                )}
              </div>
              <div
                className="d-flex gap-4 px-2 py-3"
                style={{ color: "#4B4F58" }}
              >
                <div
                  className="d-flex border justify-content-around align-items-center"
                  style={{ width: "150px" }}
                >
                  <button
                    className="text-center btn rounded-0 w-100"
                    onClick={() => {
                      if (quantity > 1) setQuantity(quantity - 1);
                    }}
                  >
                    -
                  </button>
                  <span className="w-auto border-start border-end text-center">
                    <input
                      className="border-0 shadow-none text-center p-1"
                      style={{ width: "50px" }}
                      type="number"
                      name="quantity"
                      id="order-quantity"
                      value={quantity}
                      onChange={handleChange}
                    />
                  </span>
                  <button
                    className="text-center btn rounded-0 w-100"
                    onClick={() => {
                      if (item && quantity < item?.stock)
                        setQuantity(quantity + 1);
                      else alert("Stock not available");
                    }}
                  >
                    +
                  </button>
                </div>
                <div className="px-3">
                  <button
                    className="btn btn-dark rounded-0 px-3 py-2"
                    onClick={() => {
                      if (item?.id) addItem(item?.id);
                    }}
                  >
                    Add to cart
                  </button>
                </div>
              </div>
              <div className="py-3">
                <span style={{ color: "#4B4F58" }} className="pe-2">
                  <span>SKU:</span> 2215-1-1
                </span>
                <span className="px-2">
                  <span style={{ color: "#4B4F58" }}>Category: </span>
                  <span>{findCategory()}</span>
                </span>
              </div>

              <div style={{ color: "#4B4F58" }} className="py-2">
                {" "}
                <strong>Free shipping on orders over R1000!</strong>
              </div>
              <div>
                <i className="bi bi-credit-card-2-front-fill px-2"></i>Secure
                Checkout!
              </div>
              <div>
                <i className="bi bi-truck px-2"></i>Simple Delivery!
              </div>
            </div>
          </div>
          <div className="d-flex flex-column justify-content-center align-items-center">
            <div className="p-3" style={{ marginLeft: "20rem" }}>
              <div>
                <strong style={{ color: "#4B4F58" }} className="fs-5">
                  Guaranteed Safe Checkout
                </strong>
              </div>
              <div>
                <ul
                  className="d-flex justify-content-center align-items-center gap-3"
                  style={{ listStyle: "none" }}
                >
                  <li>
                    <svg
                      style={{ width: "40px" }}
                      viewBox="0 -140 780 780"
                      enable-background="new 0 0 780 500"
                      version="1.1"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M40,0h700c22.092,0,40,17.909,40,40v420c0,22.092-17.908,40-40,40H40c-22.091,0-40-17.908-40-40V40   C0,17.909,17.909,0,40,0z"
                        fill="#0E4595"
                      />
                      <path
                        d="m293.2 348.73l33.361-195.76h53.36l-33.385 195.76h-53.336zm246.11-191.54c-10.57-3.966-27.137-8.222-47.822-8.222-52.725 0-89.865 26.55-90.18 64.603-0.299 28.13 26.514 43.822 46.752 53.186 20.771 9.595 27.752 15.714 27.654 24.283-0.131 13.121-16.586 19.116-31.922 19.116-21.357 0-32.703-2.967-50.227-10.276l-6.876-3.11-7.489 43.823c12.463 5.464 35.51 10.198 59.438 10.443 56.09 0 92.5-26.246 92.916-66.882 0.199-22.269-14.016-39.216-44.801-53.188-18.65-9.055-30.072-15.099-29.951-24.268 0-8.137 9.668-16.839 30.557-16.839 17.449-0.27 30.09 3.535 39.938 7.5l4.781 2.26 7.232-42.429m137.31-4.223h-41.232c-12.773 0-22.332 3.487-27.941 16.234l-79.244 179.4h56.031s9.16-24.123 11.232-29.418c6.125 0 60.555 0.084 68.338 0.084 1.596 6.853 6.49 29.334 6.49 29.334h49.514l-43.188-195.64zm-65.418 126.41c4.412-11.279 21.26-54.723 21.26-54.723-0.316 0.522 4.379-11.334 7.074-18.684l3.605 16.879s10.219 46.729 12.354 56.528h-44.293zm-363.3-126.41l-52.24 133.5-5.567-27.13c-9.725-31.273-40.025-65.155-73.898-82.118l47.766 171.2 56.456-0.064 84.004-195.39h-56.521"
                        fill="#ffffff"
                      />
                      <path
                        d="m146.92 152.96h-86.041l-0.681 4.073c66.938 16.204 111.23 55.363 129.62 102.41l-18.71-89.96c-3.23-12.395-12.597-16.094-24.186-16.527"
                        fill="#F2AE14"
                      />
                    </svg>
                  </li>
                  <li>
                    <svg
                      style={{ width: "40px" }}
                      viewBox="0 -9 58 58"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <rect
                        x="0.5"
                        y="0.5"
                        width="57"
                        height="39"
                        rx="3.5"
                        fill="white"
                        stroke="#F3F3F3"
                      />
                      <path
                        fill-rule="evenodd"
                        clip-rule="evenodd"
                        d="M21.2489 30.8906V32.3674V33.8443H20.6016V33.4857C20.3963 33.7517 20.0848 33.9186 19.6614 33.9186C18.8266 33.9186 18.1722 33.27 18.1722 32.3674C18.1722 31.4656 18.8266 30.8163 19.6614 30.8163C20.0848 30.8163 20.3963 30.9832 20.6016 31.2492V30.8906H21.2489ZM19.7419 31.4218C19.1816 31.4218 18.8387 31.8483 18.8387 32.3674C18.8387 32.8866 19.1816 33.3131 19.7419 33.3131C20.2773 33.3131 20.6387 32.905 20.6387 32.3674C20.6387 31.8299 20.2773 31.4218 19.7419 31.4218ZM43.1228 32.3674C43.1228 31.8483 43.4657 31.4218 44.026 31.4218C44.5621 31.4218 44.9228 31.8299 44.9228 32.3674C44.9228 32.905 44.5621 33.3131 44.026 33.3131C43.4657 33.3131 43.1228 32.8866 43.1228 32.3674ZM45.5338 29.7044V32.3674V33.8443H44.8858V33.4857C44.6804 33.7517 44.3689 33.9186 43.9455 33.9186C43.1107 33.9186 42.4563 33.27 42.4563 32.3674C42.4563 31.4656 43.1107 30.8163 43.9455 30.8163C44.3689 30.8163 44.6804 30.9832 44.8858 31.2492V29.7044H45.5338ZM29.2838 31.3914C29.7008 31.3914 29.9688 31.6509 30.0373 32.1079H28.4925C28.5616 31.6814 28.8225 31.3914 29.2838 31.3914ZM27.8138 32.3674C27.8138 31.4465 28.424 30.8163 29.2966 30.8163C30.1307 30.8163 30.7038 31.4465 30.7102 32.3674C30.7102 32.4537 30.7038 32.5344 30.6974 32.6143H28.4868C28.5802 33.1462 28.9601 33.3379 29.3771 33.3379C29.6758 33.3379 29.9938 33.2261 30.2433 33.0288L30.5605 33.5048C30.1991 33.8075 29.7885 33.9186 29.3401 33.9186C28.449 33.9186 27.8138 33.3068 27.8138 32.3674ZM37.1126 32.3674C37.1126 31.8483 37.4555 31.4218 38.0158 31.4218C38.5511 31.4218 38.9126 31.8299 38.9126 32.3674C38.9126 32.905 38.5511 33.3131 38.0158 33.3131C37.4555 33.3131 37.1126 32.8866 37.1126 32.3674ZM39.5228 30.8906V32.3674V33.8443H38.8755V33.4857C38.6695 33.7517 38.3587 33.9186 37.9352 33.9186C37.1004 33.9186 36.446 33.27 36.446 32.3674C36.446 31.4656 37.1004 30.8163 37.9352 30.8163C38.3587 30.8163 38.6695 30.9832 38.8755 31.2492V30.8906H39.5228ZM33.4569 32.3674C33.4569 33.2636 34.0857 33.9186 35.0452 33.9186C35.4936 33.9186 35.7923 33.8196 36.116 33.5663L35.8051 33.0472C35.5621 33.2205 35.3068 33.3131 35.026 33.3131C34.5091 33.3068 34.1292 32.9361 34.1292 32.3674C34.1292 31.7988 34.5091 31.4281 35.026 31.4218C35.3068 31.4218 35.5621 31.5144 35.8051 31.6877L36.116 31.1685C35.7923 30.9153 35.4936 30.8163 35.0452 30.8163C34.0857 30.8163 33.4569 31.4713 33.4569 32.3674ZM41.0177 31.2492C41.1859 30.9896 41.429 30.8163 41.8026 30.8163C41.9337 30.8163 42.1205 30.8411 42.2638 30.8969L42.0642 31.5024C41.9273 31.4465 41.7904 31.4281 41.6593 31.4281C41.2358 31.4281 41.0241 31.6997 41.0241 32.1885V33.8443H40.3761V30.8906H41.0177V31.2492ZM24.4505 31.1254C24.1389 30.9217 23.7098 30.8163 23.2364 30.8163C22.4822 30.8163 21.9967 31.1749 21.9967 31.762C21.9967 32.2437 22.3582 32.5407 23.024 32.6334L23.3298 32.6765C23.6848 32.7261 23.8524 32.8187 23.8524 32.9856C23.8524 33.2141 23.6157 33.3442 23.1737 33.3442C22.7253 33.3442 22.4017 33.2021 22.1835 33.0351L21.8784 33.5352C22.2334 33.7948 22.6818 33.9186 23.1673 33.9186C24.027 33.9186 24.5253 33.5168 24.5253 32.9545C24.5253 32.4353 24.1332 32.1637 23.4852 32.0711L23.1801 32.0272C22.9 31.9904 22.6754 31.9353 22.6754 31.7372C22.6754 31.5208 22.8871 31.3914 23.2421 31.3914C23.6221 31.3914 23.9899 31.5335 24.1703 31.6446L24.4505 31.1254ZM32.0184 31.2492C32.1859 30.9896 32.429 30.8163 32.8025 30.8163C32.9337 30.8163 33.1205 30.8411 33.2637 30.8969L33.0641 31.5024C32.9273 31.4465 32.7904 31.4281 32.6592 31.4281C32.2358 31.4281 32.0241 31.6997 32.0241 32.1885V33.8443H31.3768V30.8906H32.0184V31.2492ZM27.2784 30.8906H26.2198V29.9944H25.5654V30.8906H24.9616V31.4776H25.5654V32.8251C25.5654 33.5105 25.8334 33.9186 26.5991 33.9186C26.8799 33.9186 27.2036 33.8323 27.4089 33.6901L27.2221 33.1398C27.0289 33.2509 26.8172 33.3068 26.649 33.3068C26.3253 33.3068 26.2198 33.1087 26.2198 32.8123V31.4776H27.2784V30.8906ZM17.5997 31.9904V33.8443H16.9453V32.2005C16.9453 31.6997 16.7336 31.4218 16.2916 31.4218C15.8617 31.4218 15.563 31.6941 15.563 32.2069V33.8443H14.9086V32.2005C14.9086 31.6997 14.6912 31.4218 14.2613 31.4218C13.8186 31.4218 13.5321 31.6941 13.5321 32.2069V33.8443H12.8784V30.8906H13.5264V31.2548C13.7695 30.909 14.0803 30.8163 14.3982 30.8163C14.853 30.8163 15.1767 31.0144 15.382 31.3418C15.6564 30.9274 16.0485 30.8099 16.4285 30.8163C17.1513 30.8227 17.5997 31.2923 17.5997 31.9904Z"
                        fill="#231F20"
                      />
                      <path
                        d="M34.0465 25.8715H24.2359V8.3783H34.0465V25.8715Z"
                        fill="#FF5F00"
                      />
                      <path
                        d="M24.8583 17.1253C24.8583 13.5767 26.5328 10.4157 29.1405 8.37867C27.2336 6.88907 24.8269 5.99998 22.2114 5.99998C16.0194 5.99998 11 10.9809 11 17.1253C11 23.2697 16.0194 28.2506 22.2114 28.2506C24.8269 28.2506 27.2336 27.3615 29.1405 25.8719C26.5328 23.8349 24.8583 20.6739 24.8583 17.1253"
                        fill="#EB001B"
                      />
                      <path
                        d="M47.2818 17.1253C47.2818 23.2697 42.2624 28.2506 36.0704 28.2506C33.4548 28.2506 31.0482 27.3615 29.1405 25.8719C31.7489 23.8349 33.4235 20.6739 33.4235 17.1253C33.4235 13.5767 31.7489 10.4157 29.1405 8.37867C31.0482 6.88907 33.4548 5.99998 36.0704 5.99998C42.2624 5.99998 47.2818 10.9809 47.2818 17.1253"
                        fill="#F79E1B"
                      />
                    </svg>
                  </li>
                  <li>
                    <svg
                      style={{ width: "40px" }}
                      viewBox="0 -139.5 750 750"
                      version="1.1"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <desc>Created with Sketch.</desc>
                      <defs></defs>
                      <g
                        id="Page-1"
                        stroke="none"
                        stroke-width="1"
                        fill="none"
                        fill-rule="evenodd"
                      >
                        <g id="amex" fill-rule="nonzero">
                          <rect
                            id="Rectangle-1"
                            fill="#2557D6"
                            x="0"
                            y="0"
                            width="750"
                            height="471"
                            rx="40"
                          ></rect>
                          <path
                            d="M0.002688,221.18508 L36.026849,221.18508 L44.149579,201.67506 L62.334596,201.67506 L70.436042,221.18508 L141.31637,221.18508 L141.31637,206.26909 L147.64322,221.24866 L184.43894,221.24866 L190.76579,206.04654 L190.76579,221.18508 L366.91701,221.18508 L366.83451,189.15941 L370.2427,189.15941 C372.62924,189.24161 373.3263,189.46144 373.3263,193.38516 L373.3263,221.18508 L464.43232,221.18508 L464.43232,213.72973 C471.78082,217.6508 483.21064,221.18508 498.25086,221.18508 L536.57908,221.18508 L544.78163,201.67506 L562.96664,201.67506 L570.98828,221.18508 L644.84844,221.18508 L644.84844,202.65269 L656.0335,221.18508 L715.22061,221.18508 L715.22061,98.67789 L656.64543,98.67789 L656.64543,113.14614 L648.44288,98.67789 L588.33787,98.67789 L588.33787,113.14614 L580.80579,98.67789 L499.61839,98.67789 C486.02818,98.67789 474.08221,100.5669 464.43232,105.83121 L464.43232,98.67789 L408.40596,98.67789 L408.40596,105.83121 C402.26536,100.40529 393.89786,98.67789 384.59383,98.67789 L179.90796,98.67789 L166.17407,130.3194 L152.07037,98.67789 L87.59937,98.67789 L87.59937,113.14614 L80.516924,98.67789 L25.533518,98.67789 L-2.99999999e-06,156.92445 L-2.99999999e-06,221.18508 L0.002597,221.18508 L0.002688,221.18508 Z M227.39957,203.51436 L205.78472,203.51436 L205.70492,134.72064 L175.13228,203.51436 L156.62,203.51436 L125.96754,134.6597 L125.96754,203.51436 L83.084427,203.51436 L74.982981,183.92222 L31.083524,183.92222 L22.8996,203.51436 L4.7e-05,203.51436 L37.756241,115.67692 L69.08183,115.67692 L104.94103,198.84086 L104.94103,115.67692 L139.35289,115.67692 L166.94569,175.26406 L192.29297,115.67692 L227.39657,115.67692 L227.39657,203.51436 L227.39957,203.51436 Z M67.777214,165.69287 L53.346265,130.67606 L38.997794,165.69287 L67.777214,165.69287 Z M313.41947,203.51436 L242.98611,203.51436 L242.98611,115.67692 L313.41947,115.67692 L313.41947,133.96821 L264.07116,133.96821 L264.07116,149.8009 L312.23551,149.8009 L312.23551,167.80606 L264.07116,167.80606 L264.07116,185.34759 L313.41947,185.34759 L313.41947,203.51436 Z M412.67528,139.33321 C412.67528,153.33782 403.28877,160.57326 397.81863,162.74575 C402.43206,164.49434 406.37237,167.58351 408.24808,170.14281 C411.22525,174.51164 411.73875,178.41416 411.73875,186.25897 L411.73875,203.51436 L390.47278,203.51436 L390.39298,192.43732 C390.39298,187.1518 390.90115,179.55074 387.0646,175.32499 C383.98366,172.23581 379.28774,171.56552 371.69714,171.56552 L349.06363,171.56552 L349.06363,203.51436 L327.98125,203.51436 L327.98125,115.67692 L376.47552,115.67692 C387.25084,115.67692 395.18999,115.9604 402.00639,119.88413 C408.67644,123.80786 412.67529,129.53581 412.67529,139.33321 L412.67528,139.33321 Z M386.02277,152.37632 C383.1254,154.12756 379.69859,154.18584 375.59333,154.18584 L349.97998,154.18584 L349.97998,134.67583 L375.94186,134.67583 C379.61611,134.67583 383.44999,134.8401 385.94029,136.26016 C388.67536,137.53981 390.36749,140.26337 390.36749,144.02548 C390.36749,147.86443 388.75784,150.95361 386.02277,152.37632 Z M446.48908,203.51436 L424.97569,203.51436 L424.97569,115.67692 L446.48908,115.67692 L446.48908,203.51436 Z M696.22856,203.51436 L666.35032,203.51436 L626.38585,137.58727 L626.38585,203.51436 L583.44687,203.51436 L575.24166,183.92222 L531.44331,183.92222 L523.48287,203.51436 L498.81137,203.51436 C488.56284,203.51436 475.58722,201.25709 468.23872,193.79909 C460.82903,186.3411 456.97386,176.23903 456.97386,160.26593 C456.97386,147.23895 459.27791,135.33 468.33983,125.91941 C475.15621,118.90916 485.83044,115.67692 500.35982,115.67692 L520.77174,115.67692 L520.77174,134.49809 L500.78818,134.49809 C493.0938,134.49809 488.74909,135.63733 484.564,139.70147 C480.96957,143.4 478.50322,150.39171 478.50322,159.59829 C478.50322,169.00887 480.38158,175.79393 484.30061,180.22633 C487.5465,183.70232 493.445,184.75677 498.99495,184.75677 L508.46393,184.75677 L538.17987,115.67957 L569.77152,115.67957 L605.46843,198.76138 L605.46843,115.67957 L637.5709,115.67957 L674.6327,176.85368 L674.6327,115.67957 L696.22856,115.67957 L696.22856,203.51436 Z M568.07051,165.69287 L553.47993,130.67606 L538.96916,165.69287 L568.07051,165.69287 Z"
                            id="Path"
                            fill="#FFFFFF"
                          ></path>
                          <path
                            d="M749.95644,343.76716 C744.83485,351.22516 734.85504,355.00582 721.34464,355.00582 L680.62723,355.00582 L680.62723,336.1661 L721.17969,336.1661 C725.20248,336.1661 728.01736,335.63887 729.71215,333.99096 C731.18079,332.63183 732.2051,330.65804 732.2051,328.26036 C732.2051,325.70107 731.18079,323.66899 729.62967,322.45028 C728.09984,321.10969 725.87294,320.50033 722.20135,320.50033 C702.40402,319.83005 677.70592,321.10969 677.70592,293.30714 C677.70592,280.56363 685.83131,267.14983 707.95664,267.14983 L749.95379,267.14983 L749.95644,249.66925 L710.93382,249.66925 C699.15812,249.66925 690.60438,252.47759 684.54626,256.84375 L684.54626,249.66925 L626.83044,249.66925 C617.60091,249.66925 606.76706,251.94771 601.64279,256.84375 L601.64279,249.66925 L498.57751,249.66925 L498.57751,256.84375 C490.37496,250.95154 476.53466,249.66925 470.14663,249.66925 L402.16366,249.66925 L402.16366,256.84375 C395.67452,250.58593 381.24357,249.66925 372.44772,249.66925 L296.3633,249.66925 L278.95252,268.43213 L262.64586,249.66925 L148.99149,249.66925 L148.99149,372.26121 L260.50676,372.26121 L278.447,353.20159 L295.34697,372.26121 L364.08554,372.32211 L364.08554,343.48364 L370.84339,343.48364 C379.96384,343.62405 390.72054,343.25845 400.21079,339.17311 L400.21079,372.25852 L456.90762,372.25852 L456.90762,340.30704 L459.64268,340.30704 C463.13336,340.30704 463.47657,340.45011 463.47657,343.92344 L463.47657,372.25587 L635.71144,372.25587 C646.64639,372.25587 658.07621,369.46873 664.40571,364.41107 L664.40571,372.25587 L719.03792,372.25587 C730.40656,372.25587 741.50913,370.66889 749.95644,366.60475 L749.95644,343.76712 L749.95644,343.76716 Z M408.45301,296.61266 C408.45301,321.01872 390.16689,326.05784 371.7371,326.05784 L345.42935,326.05784 L345.42935,355.52685 L304.44855,355.52685 L278.48667,326.44199 L251.5058,355.52685 L167.9904,355.52685 L167.9904,267.66822 L252.79086,267.66822 L278.73144,296.46694 L305.55002,267.66822 L372.92106,267.66822 C389.6534,267.66822 408.45301,272.28078 408.45301,296.61266 Z M240.82781,337.04655 L188.9892,337.04655 L188.9892,319.56596 L235.27785,319.56596 L235.27785,301.64028 L188.9892,301.64028 L188.9892,285.66718 L241.84947,285.66718 L264.91132,311.27077 L240.82781,337.04655 Z M324.3545,347.10668 L291.9833,311.3189 L324.3545,276.6677 L324.3545,347.10668 Z M372.2272,308.04117 L344.98027,308.04117 L344.98027,285.66718 L372.47197,285.66718 C380.08388,285.66718 385.36777,288.75636 385.36777,296.43956 C385.36777,304.03796 380.32865,308.04117 372.2272,308.04117 Z M514.97053,267.66815 L585.34004,267.66815 L585.34004,285.83764 L535.96778,285.83764 L535.96778,301.81074 L584.1348,301.81074 L584.1348,319.73642 L535.96778,319.73642 L535.96778,337.21701 L585.34004,337.29641 L585.34004,355.52678 L514.97053,355.52678 L514.97053,267.66815 Z M487.91724,314.6973 C492.61049,316.42205 496.44703,319.51387 498.24559,322.07317 C501.22276,326.36251 501.65378,330.36571 501.73891,338.10985 L501.73891,355.52685 L480.5714,355.52685 L480.5714,344.53458 C480.5714,339.24908 481.08223,331.42282 477.1632,327.33748 C474.08226,324.19002 469.38635,323.4376 461.69463,323.4376 L439.16223,323.4376 L439.16223,355.52685 L417.97609,355.52685 L417.97609,267.66822 L466.65393,267.66822 C477.32816,267.66822 485.10236,268.13716 492.02251,271.81449 C498.6766,275.8177 502.86168,281.30191 502.86168,291.3245 C502.85868,305.34765 493.46719,312.50362 487.91724,314.6973 Z M475.99899,303.59022 C473.17879,305.25668 469.69077,305.39975 465.58817,305.39975 L439.97483,305.39975 L439.97483,285.66718 L465.9367,285.66718 C469.69077,285.66718 473.4475,285.74658 475.99899,287.25416 C478.7314,288.67687 480.36499,291.39779 480.36499,295.15725 C480.36499,298.91672 478.7314,301.94496 475.99899,303.59022 Z M666.33539,309.1866 C670.44067,313.41766 672.64095,318.7588 672.64095,327.80112 C672.64095,346.70178 660.78278,355.5242 639.51948,355.5242 L598.45353,355.5242 L598.45353,336.68449 L639.35453,336.68449 C643.35337,336.68449 646.18954,336.15726 647.9668,334.50934 C649.41681,333.15021 650.45709,331.17643 650.45709,328.77875 C650.45709,326.21944 649.33167,324.18738 647.88433,322.96866 C646.27201,321.62807 644.04778,321.01872 640.37619,321.01872 C620.65868,320.34843 595.9659,321.62807 595.9659,293.82551 C595.9659,281.08201 604.00615,267.66822 626.11019,267.66822 L668.37872,267.66822 L668.37872,286.36752 L629.70196,286.36752 C625.86809,286.36752 623.37512,286.51059 621.25464,287.9545 C618.94527,289.37721 618.08856,291.48876 618.08856,294.2759 C618.08856,297.59028 620.04941,299.8449 622.702,300.81987 C624.92624,301.59084 627.31543,301.81603 630.9072,301.81603 L642.25722,302.12071 C653.703,302.39889 661.55967,304.37003 666.33539,309.1866 Z M750,285.66718 L711.57335,285.66718 C707.7368,285.66718 705.18797,285.81025 703.04088,287.25416 C700.81665,288.67687 699.95995,290.78843 699.95995,293.57558 C699.95995,296.88994 701.83831,299.14456 704.57071,300.11953 C706.79495,300.8905 709.18415,301.1157 712.6961,301.1157 L724.12327,301.42038 C735.65419,301.70387 743.35123,303.67765 748.04448,308.49157 C748.89852,309.16186 749.41202,309.91428 750,310.6667 L750,285.66718 Z"
                            id="path13"
                            fill="#FFFFFF"
                          ></path>
                        </g>
                      </g>
                    </svg>
                  </li>
                  <li>
                    <svg
                      style={{ width: "40px" }}
                      fill="#000000"
                      viewBox="0 0 14 14"
                      role="img"
                      focusable="false"
                      aria-hidden="true"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="m 2.6302105,6.38023 q 0,0.26562 -0.1875,0.4375 -0.15104,0.13542 -0.463544,0.13542 h -0.08854 V 5.80731 h 0.08854 q 0.317704,0 0.463544,0.14063 0.1875,0.16146 0.1875,0.43229 z M 11.880211,6.04169 q 0,0.27083 -0.333341,0.27083 h -0.099 V 5.78648 h 0.10416 q 0.32813,0 0.32813,0.25521 z M 2.9791705,6.38023 q 0,-0.38542 -0.26042,-0.6276 -0.26042,-0.24219 -0.67188,-0.24219 h -0.494788 v 1.73437 h 0.494788 q 0.38542,0 0.6198,-0.19791 0.3125,-0.26563 0.3125,-0.66667 z m 0.15625,0.86458 h 0.33854 V 5.51044 h -0.33854 v 1.73437 z m 1.66666,-0.52604 q 0,-0.20833 -0.10677,-0.32292 -0.10677,-0.11458 -0.39323,-0.21875 -0.15104,-0.0521 -0.20573,-0.099 -0.0547,-0.0469 -0.0547,-0.1198 0,-0.0833 0.0703,-0.13802 0.0703,-0.0547 0.17969,-0.0547 0.15104,0 0.27604,0.14062 l 0.17708,-0.22917 q -0.21354,-0.1927 -0.51042,-0.1927 -0.22916,0 -0.38541,0.14322 -0.15625,0.14323 -0.15625,0.35157 0,0.18229 0.0937,0.28906 0.0937,0.10677 0.33333,0.1901 0.19271,0.0677 0.23438,0.099 0.099,0.0625 0.099,0.17708 0,0.10417 -0.0729,0.17448 -0.0729,0.0703 -0.1875,0.0703 -0.25,0 -0.36979,-0.22917 l -0.21875,0.20833 q 0.22916,0.33334 0.59895,0.33334 0.26563,0 0.4323,-0.15886 0.16666,-0.15885 0.16666,-0.41406 z m 1.44792,0.46875 V 6.78648 q -0.19271,0.19271 -0.40625,0.19271 -0.25521,0 -0.41927,-0.16927 -0.16406,-0.16927 -0.16406,-0.42969 0,-0.25 0.16406,-0.42448 0.16406,-0.17448 0.40364,-0.17448 0.22396,0 0.42188,0.19792 V 5.57815 q -0.20833,-0.10417 -0.41667,-0.10417 -0.38541,0 -0.65364,0.26302 -0.26823,0.26302 -0.26823,0.64323 0,0.38021 0.26562,0.64323 0.26563,0.26302 0.65104,0.26302 0.21875,0 0.42188,-0.099 z M 12.66667,10.33335 V 7.58856 Q 12.32812,7.7969 11.91406,8.02606 11.5,8.25523 10.67708,8.63544 9.8541705,9.01564 8.9609405,9.35158 q -0.89323,0.33594 -2.17448,0.70052 -1.28125,0.36459 -2.625,0.61459 H 12.33333 q 0.13542,0 0.23438,-0.099 0.099,-0.099 0.099,-0.23438 z M 8.2343705,6.39065 q 0,-0.39063 -0.27604,-0.66667 -0.27604,-0.27604 -0.66666,-0.27604 -0.39063,0 -0.66667,0.27604 -0.27604,0.27604 -0.27604,0.66667 0,0.39062 0.27604,0.66666 0.27604,0.27604 0.66667,0.27604 0.39062,0 0.66666,-0.27604 0.27604,-0.27604 0.27604,-0.66666 z m 0.79167,0.90104 0.75,-1.78125 h -0.36979 l -0.46875,1.16666 -0.46354,-1.16666 h -0.36979 l 0.73958,1.78125 h 0.18229 z m 0.90104,-0.0469 H 10.88542 V 6.95313 h -0.6198 V 6.48437 h 0.598961 V 6.19271 H 10.26562 V 5.80729 h 0.6198 V 5.51042 H 9.9270805 v 1.73437 z m 2.0364595,0 h 0.41667 L 11.83333,6.51563 q 0.39584,-0.0833 0.39584,-0.48959 0,-0.24479 -0.16146,-0.38021 -0.16146,-0.13541 -0.45313,-0.13541 h -0.50521 v 1.73437 h 0.33855 V 6.55208 h 0.0469 z M 13,3.69792 v 6.60416 q 0,0.29167 -0.200519,0.4948 Q 12.598961,11 12.3125,11 H 1.6874995 q -0.286458,0 -0.486979,-0.20312 -0.200521,-0.20313 -0.200521,-0.4948 V 3.69792 q 0,-0.29167 0.200521,-0.49479 Q 1.4010415,3 1.6874995,3 H 12.3125 Q 12.598961,3 12.799481,3.20313 13,3.40625 13,3.69792 z"
                        fill="#fb6f92"
                      ></path>
                    </svg>
                  </li>
                </ul>
              </div>
            </div>
          </div>
          <div
            className="d-flex justify-content-between align-items-center position-absolute top-0 end-0"
            style={{ width: "70px" }}
          >
            <div className="rounded-circle bg-black text-white p-2 py-1">
              <NavLink className="text-white" to={`/product/${goPrev()}`}>
                <i className="bi bi-chevron-left"></i>
              </NavLink>
            </div>
            <div className="rounded-circle bg-black text-white p-2 py-1">
              <NavLink className="text-white" to={`/product/${goNext()}`}>
                <i className="bi bi-chevron-right"></i>
              </NavLink>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}
export default ProductDetailsComponent;
